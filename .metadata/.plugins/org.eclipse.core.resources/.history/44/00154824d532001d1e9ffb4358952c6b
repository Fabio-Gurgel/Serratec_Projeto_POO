package br.org.serratec.teste;

import java.io.BufferedReader;
import java.io.FileReader;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import br.org.serratec.model.Dependente;
import br.org.serratec.model.Funcionario;

public class TesteTrabalho {
	public static void main(String[] args) {

		List <Funcionario> funcionarios = new ArrayList <>();
		List<Dependente> dependentes = new ArrayList<>(); 
		           
		String fileIn = "C:/Users/ASUS/Serratec/pOOTrabalhoFinal/pOOFuncionarios.csv";
		String line = null;
		String pastLine = "";

		try {
		// Read all lines in from CSV file and add to studentList
		FileReader fr = new FileReader(fileIn);
		BufferedReader br = new BufferedReader(fr);
		
	    while ((line = br.readLine()) != null && (pastLine = br.readLine()) != null) {
	    	String[] FuncTemp = line.split(";");
			String nomeFunc = FuncTemp[0];
			String cpfFunc = FuncTemp[1];
			LocalDate dataFunc = LocalDate.parse(FuncTemp[2]);
			double salario = Double.parseDouble(FuncTemp[3]);
			
			while ((line = br.readLine()) != null){
				String[] DepTemp = line.split(";");
				String nomeDep = DepTemp[0];
				String cpfDep = DepTemp[1];
				LocalDate dataDep = LocalDate.parse(DepTemp[2]);
				String parantesco = DepTemp[3];
				dependentes.add(new Dependente(nomeDep, cpfDep, dataDep, parantesco));
			}
			
			funcionarios.add(new Funcionario(nomeFunc, cpfFunc, dataFunc, salario, dependentes));
			pastLine = line;
	     }
	     br.close();
	     System.out.println(funcionarios);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}		
}

/*
 * List<Funcionario> funcionarios = new ArrayList<>(); List<Dependente> deps =
 * new ArrayList<>(); Dependente dep = new Dependente("Dep", "222",
 * LocalDate.of(2022,2,2), "FILHO"); Dependente dep2 = new Dependente("Dep",
 * "222", LocalDate.of(2022,2,2), "FILHO"); deps.add(dep); deps.add(dep2);
 * Funcionario fun1 = new Funcionario("Nome", "1111", LocalDate.of(2022,2,2),
 * 7000., deps); funcionarios.add(fun1);
 * 
 * fun1.calcularSalarioLiquido(); System.out.println(funcionarios);
 * System.out.println(fun1.getDependentes().size());
 */

// LEITURA DO ARQUIVO

// CALCULOS
// 1> INSS
// 2> DEP
// 3> IR

// COMPARACAO EXCEPTIONS

// GRAVACAO DO ARQUIVO
